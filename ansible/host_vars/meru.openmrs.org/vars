---
# openhim
users:
  bamboo:
   comment: CI Bamboo User
   groups: 'admin'
   ssh_key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDQQ+SCzrYNUlDlCoUJMrgNa+NvKX3dlog6LrcOYAt45ovpCOEhv46I0cGm3ZrarOejjseKWVsCrN1YSt7q9IDc/tZZH9fpQy5AvssZH6b4Vo799/4ig7iZWAJAXHKMxKh0mqgifbtP8EImvE3zmeBD8LlyvvF3cw2T2wg5Jh5bN/p7hUrEU7oGAbJR0TMMUY2/ZAzqzJ6RWHn03PBhG70MYxXhQD93RsEocEUecNRibqGMJm8JjBUumZCoIZWFH8J9W0MKuYNrndvQ60xVZbumQaWQ1pdrXEfNy//xslLTbH/+fZhWK8ilrwnkTHJeCHnhFZ6E0LRP5dbnYxYzHoxLsRz7G3Z/H0Cb5ffUcODjmGp9IsK/MIeE+DKe4mvEitkUwj1EI4PpadvZ2qyn4X0ks2WDFdlNvhjR1PJvHIL7GfrDqhLxazVI3bzUZVRSrD1sKoSIfISn6mRZcDbdyMSgYjzn4YjEmUM+Jkh0QWdBySMn/xj96Pqeyk0EaJ//Ru5w6SXemZ6QeWP2spKdB+KUhB6Xdp5+41UZ3i4jtpmU8+wzOQiXzPvmxGYdsSJWZvD0fm6PH5z1MgM68fVGqmrnZWWTUWuLVTeQRNa95GjSjB6AV4tZyTC4lLlBSLCWRNr55JmDif5YJxD322Lzf5Li5rKUiQuif3655jqVaEpiow== bambooagent"
  maurya:
   comment: Sri Maurya Kummamuru
   groups: 'admin'
   ssh_key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDDZ5/06Fs0pcx37McO9A+sV6z6ozSuTsvdqYXmTMiog4cjCumyhMhQ7rDehaft2/zDsuAibHFfLcG30Tahb76Gt19qKFB7VogORtmXzlqf2xKVKkaWWN0EHB/ilcfwwCnCGrqnGHbiRfO7P79SB6Yj6I1L0qkhwUhFEGv4w7VhbKiffAc2oUmO7KcbuaPIlRpMQHfBvmbamjEeaTIu1LTX6Vp8P2D2XNfYWEMjawWJo/bXUh3idan+7VD5nFZbQBz/p+0efiXD6FzjcFeiOBOMCiwQm425m/cozGkJ3FRmWAZzAk8w/Pd1IEECdK/USLF5pSYa8SEVTPKlrin+HA+b"

datadog_tags_extra:
  - "service:openhim"

docker_deployment:
  - openhim

docker_deployable_images:
  - repository: jembi/openhim-core
    compose: openhim
  - repository: jembi/openhim-console
    compose: openhim

letsencrypt_cert_domains:
   - meru.openmrs.org
   - openhim.openmrs.org
   - openhim-api.openmrs.org
   - openhim-core.openmrs.org

nginx_vhosts:
  - listen: "80 default_server"
    server_name: "openhim.openmrs.org"
    extra_parameters: |
      return 301 https://$host$request_uri;
  - listen: "443 ssl"
    server_name: "openhim.openmrs.org"
    extra_parameters: |
      access_log /var/log/nginx/openhim_access.log;
      error_log /var/log/nginx/openhim_error.log;
      ssl_certificate /etc/letsencrypt/live/meru.openmrs.org/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/meru.openmrs.org/privkey.pem;
      location ^~ /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
      }
      location / {
        proxy_pass http://127.0.0.1:8081/;
      }
  - listen: "80"
    server_name: "openhim-api.openmrs.org"
    extra_parameters: |
      return 301 https://$host$request_uri;
  - listen: "443 ssl"
    server_name: "openhim-api.openmrs.org"
    extra_parameters: |
      access_log /var/log/nginx/openhimapi_access.log;
      error_log /var/log/nginx/openhimapi_error.log;
      ssl_certificate /etc/letsencrypt/live/meru.openmrs.org/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/meru.openmrs.org/privkey.pem;
      location ^~ /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
      }
      location / {
        proxy_pass https://127.0.0.1:8080/;
      }
  - listen: "80"
    server_name: "openhim-core.openmrs.org"
    extra_parameters: |
      return 301 https://$host$request_uri;
  - listen: "443 ssl"
    server_name: "openhim-core.openmrs.org"
    extra_parameters: |
      access_log /var/log/nginx/openhimcore_access.log;
      error_log /var/log/nginx/openhimcore_error.log;
      ssl_certificate /etc/letsencrypt/live/meru.openmrs.org/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/meru.openmrs.org/privkey.pem;
      location ^~ /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
      }
      location / {
        proxy_pass https://127.0.0.1:5000/;
      }
  - listen: "443 ssl"
    server_name: "meru.openmrs.org"
    extra_parameters: |
      access_log /var/log/nginx/deployer_access.log;
      error_log /var/log/nginx/deployer_error.log;
      ssl_certificate /etc/letsencrypt/live/meru.openmrs.org/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/meru.openmrs.org/privkey.pem;
      location ^~ /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
      }
      location / {
        proxy_pass http://127.0.0.1:3000/;
      }

aws_access_key_id: '{{ vault_aws_access_key_id }}'
aws_secret_access_key: '{{ vault_aws_secret_access_key }}'
backup_tag: 'configured'
